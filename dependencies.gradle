ext {
    versions = [
            springBoot    : "3.2.5",
            lombok        : "1.18.32",
            postgresql    : "42.7.3",
            openapi       : "2.5.0",
            mapstruct     : "1.5.5.Final",
            jwt           : "4.4.0",
            jjwt          : "0.11.0",
            validator     : "8.0.1.Final",
            springCloud   : "4.1.1",
            circuitBreaker: "3.1.0",
            jacksonJsr310 : "2.14.1",
    ]

    libs = [
            springBootWeb                   : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
            springBootThymeleaf             : "org.springframework.boot:spring-boot-starter-thymeleaf:$versions.springBoot",

            springBootDataJpa               : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
            springBootDataMongo             : "org.springframework.boot:spring-boot-starter-data-mongodb:$versions.springBoot",
            springBootDataRedis             : "org.springframework.boot:spring-boot-starter-data-redis:$versions.springBoot",
            springBootDataElastic           : "org.springframework.boot:spring-boot-starter-data-elasticsearch:$versions.springBoot",

            springBootAmqp                  : "org.springframework.boot:spring-boot-starter-amqp:$versions.springBoot",
            springBootActuator              : "org.springframework.boot:spring-boot-starter-actuator:$versions.springBoot",
            springBootElasticsearch         : "org.springframework.boot:spring-boot-starter-data-elasticsearch:$versions.springBoot",
            springBootSecurity              : "org.springframework.boot:spring-boot-starter-security:$versions.springBoot",
            springBootMail                  : "org.springframework.boot:spring-boot-starter-mail:$versions.springBoot",

            springCloudOpenFeign            : "org.springframework.cloud:spring-cloud-starter-openfeign:$versions.springCloud",

            springCloudConfig               : "org.springframework.cloud:spring-cloud-starter-config:$versions.springCloud",
            springCloudConfigServer         : "org.springframework.cloud:spring-cloud-config-server:$versions.springCloud",
            springCloudConfigClient         : "org.springframework.cloud:spring-cloud-config-client:$versions.springCloud",

            springCloudGateway              : "org.springframework.cloud:spring-cloud-starter-gateway:$versions.springCloud",

            micrometer                      : "io.micrometer:micrometer-tracing-bridge-otel",
            opentelemetry                   : "io.opentelemetry:opentelemetry-exporter-zipkin",

            springCloudCircuitBreaker       : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$versions.circuitBreaker",
            springCloudCircuitBreakerReactor: "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:$versions.circuitBreaker",

            lombok                          : "org.projectlombok:lombok:$versions.lombok",
            openapi                         : "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.openapi",
            postgresql                      : "org.postgresql:postgresql:$versions.postgresql",

            mapstruct                       : "org.mapstruct:mapstruct:$versions.mapstruct",
            mapstructProcessor              : "org.mapstruct:mapstruct-processor:$versions.mapstruct",

            jwt                             : "com.auth0:java-jwt:$versions.jwt",

            jjwtApi                         : "io.jsonwebtoken:jjwt-api:$versions.jjwt",
            jjwtImpl                        : "io.jsonwebtoken:jjwt-impl:$versions.jjwt",
            jjwtJackson                     : "io.jsonwebtoken:jjwt-jackson:$versions.jjwt",
            jacksonJsr310                   : "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$versions.jacksonJsr310",

            validator                       : "org.hibernate.validator:hibernate-validator:$versions.validator"
    ]
}
